// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x", "linux-musl-arm64-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model application {
  id            Int       @id @default(autoincrement())
  serverId      Int       @default(1)
  name          String
  description   String?
  icon          String
  publicURL     String
  localURL      String?
  uptimecheckUrl String?
  createdAt     DateTime  @default(now())
  online         Boolean  @default(true)
}

model uptime_history {
  id            Int       @id @default(autoincrement())
  applicationId Int       @default(1)
  online        Boolean   @default(true)
  createdAt     DateTime  @default(now())
}

model server_history {
  id            Int       @id @default(autoincrement())
  serverId      Int       @default(1)
  online        Boolean   @default(true)
  cpuUsage      String?
  ramUsage      String?
  diskUsage     String?
  gpuUsage      String?
  temp          String?
  createdAt     DateTime  @default(now())
}

model server {
  id            Int       @id @default(autoincrement())
  host          Boolean   @default(false)
  hostServer    Int?
  name          String
  icon          String?
  os            String?
  ip            String?
  url           String?
  cpu           String?
  gpu           String?
  ram           String?
  disk          String?
  monitoring    Boolean   @default(false)
  monitoringURL String?
  cpuUsage      String?
  ramUsage      String?
  diskUsage     String?
  online        Boolean   @default(true)
  uptime        String?
  gpuUsage      String?
  temp          String?
}

model settings {
  id            Int       @id @default(autoincrement())
  uptime_checks          Boolean       @default(true)
  notification_text_application       String?
  notification_text_server       String?
}

model user {
  id            String    @id @default(uuid())
  email         String    @unique
  password      String
}

model notification {
  id            Int       @id @default(autoincrement())
  name          String
  enabled       Boolean   @default(true)
  type          String
  smtpHost     String?
  smtpPort     Int?
  smtpFrom     String?
  smtpUser     String?
  smtpPass     String?
  smtpSecure   Boolean?
  smtpTo       String?
  telegramChatId String?
  telegramToken String?
  discordWebhook String?
  gotifyUrl     String?
  gotifyToken   String?
  ntfyUrl       String?
  ntfyToken     String?
  pushoverUrl   String?
  pushoverToken String?
  pushoverUser  String?
  echobellURL   String?
}

model test_notification {
  id            Int       @id @default(autoincrement())
  notificationId Int
}
